/** @file lateral_Control_WEBOTS.hpp
 *  @brief The header file for lateral controller implementation when using IMACS framework with WEBOTS simulator
 */
#ifndef LANEDETECTION_LATERAL_CONTROL_WEBOTS_H_
#define LANEDETECTION_LATERAL_CONTROL_WEBOTS_H_

#include <Eigen/Eigen>
#include "lkas_model.hpp"
#include "config_webots.hpp"

#define MAX_SCENARIOS 12 //!< maximum number of scenarios defined
#define LENGTH_PHI_AUG 6 //!< length of the phi_aug matrix of the controller.
 
/// @brief Class for lateral controller in Webots.
class lateralControllerWEBOTS : lkasModel {
private:
    /// member variables
    std::vector<long double> m_input = std::vector<long double> (40000); /// the control input. Stored as a list (inefficient).[TO DO: convert from vector<long double> to long double for delay <= h]
    long double m_desired_steering_angle; /// computed steering angle
    /// Controller matrices. Note that the Matrix dimensions need to be changed depending on the type of controller and controller implementation choice.
    std::vector< Eigen::Matrix<long double, LENGTH_PHI_AUG, LENGTH_PHI_AUG> > m_phi_aug
                                        = std::vector< Eigen::Matrix<long double, LENGTH_PHI_AUG, LENGTH_PHI_AUG> > (MAX_SCENARIOS); /// controller phi_aug matrices
    std::vector< Eigen::Matrix<long double, 1, LENGTH_PHI_AUG> > m_K2c
                                        = std::vector< Eigen::Matrix<long double, 1, LENGTH_PHI_AUG> > (MAX_SCENARIOS);  /// controller gain matrices
    std::vector< Eigen::Matrix<long double, LENGTH_PHI_AUG, 1> > m_Gamma_aug
                                        = std::vector< Eigen::Matrix<long double, LENGTH_PHI_AUG, 1> > (MAX_SCENARIOS);  /// controller Gamma_aug matrices
public:

    vector<float> period_ms; 	/// sampling period in milliseconds
    vector<float> tau_ms; 	/// sensor-to-actuator delay in milliseconds

    /**  @brief C++ implementation of the controller that computes the steering angle for the LKAS represented by the m_phi_aug and m_Gamma_aug matrices using the gain matrix m_K2c
         @param[in] the_yL           	Lateral Deviation at the look-ahead distance. Since the system is SISO, only one state is needed as input
         @param[in] the_it_counter	The iteration counter that keeps track of the k-th instance
	 @param[in] scenario		The scenario to simulate
	 @note the function updates the class member m_desired_steering_angle
      */
    void compute_steering_angle(long double the_yL, int the_it_counter,int scenario);

    /**  @brief Function to access the steering angle from outside the class
	 @return the m_desired_steering_angle.
      */
    long double get_steering_angle();

    /**  @brief C++ implementation of a simple estimator
         @param[in] the_it_counter	The iteration counter that keeps track of the k-th instance
	 @param[in] scenario		The scenario to simulate
	 @note the function updates the m_input and (derived) states of the system m_zi
      */
    void estimate_next_state(int the_it_counter,int scenario);
    /// constructor
    lateralControllerWEBOTS(int vel) : lkasModel(1.628L, 2.995L, (vel*5/18), 5.5L, 1.2975L) {
            m_desired_steering_angle = 0.0L;
            fill(m_input.begin(), m_input.end(), 0.0L); // m_input is the input of the last sampling period.

            period_ms={45.f, 25.f, 25.f, 45.f, 25.f, 25.f, 25.f, 25.f, 40.f, 25.f, 35.f, 40.f}; //!< sampling period h in ms for each scenario s_i
            tau_ms={45.f, 25.f, 25.f, 45.f, 25.f, 25.f, 25.f, 25.f, 40.f, 25.f, 35.f, 40.f}; //!< sensor-to-actuator delay in ms for each scenario s_i
	    if (period_ms.size() != tau_ms.size())
		throw range_error("In lateralControllerWEBOTS, size of vectors period_ms and tau_ms should be the same");
            /////////////////////////////////////////////////////////////// v0 ////////////////////////////////////////////////////////////////////////////
            m_phi_aug[0] <<   
		0.68394125179038001,   -0.50469569680628912,   0,   0,   0,   1.8344030848628483,
	     	-0.017622779064995642,   0.76204221447773546,   0,   0,   0,   1.2381213145506385,
	     	-0.034844135184427756,   -0.21656850528145191,   1,   0.625,   0.1953125,   -0.21472642726492033,
	     	0.00044389000156342973,   -0.039350449411834472,   0,   1,   0.625,   -0.029322839232682182,
	     	0,   0,   0,   0,   1,   0,
	     	0,   0,   0,   0,   0,   0;

	    m_K2c[0] <<
		-0.026700589945090891,   -0.21058742754106646,   0.24185856600630501,   1.3798934226662904,   1.9450838658816487e-14,   -0.35078808495101099; // Q = 7.5, R=200 
		// -0.48402097619111417,   -0.42376985807359507,   -1.3360755825434583,   0.08540893033116069,   -0.25517460395887159; // Q = 5
		// -2.1195710428629027,   -1.6001839119866061,   -3.5343931650567462,   0.21146444275696266,   -0.64888135178617723;  // Q = 100
		//-0.29498618074169913,   -0.28483932006375978,   -1.0551617243483074,   0.068797172806382811,   -0.20401339097820362; // Q = 2.5
	   
	    m_Gamma_aug[0] <<
			0,
		     	0,
		     	0,
		     	0,
		     	0,
		     	1;
	 
		/////////////////////////////////////////////////////////////// v1 ////////////////////////////////////////////////////////////////////////////
		    m_phi_aug[1] <<   
		0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
		     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
		     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
		     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
		     0,   0,   0,   0,   1,   0,
		     0,   0,   0,   0,   0,   0;

		// // v1 q=7.5
		    m_K2c[1] <<
		-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
		//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      

		    m_Gamma_aug[1] <<
		    0,
		     0,
		     -0,
		     -0,
		     0,
		     1;

	/////////////////////////////////////////////////////////////// v2 ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[2] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[2] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      

	    m_Gamma_aug[2] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	  
	/////////////////////////////////////////////////////////////// v3 ////////////////////////////////////////////////////////////////////////////
	     m_phi_aug[3] <<   
	0.68394125179038001,   -0.50469569680628912,   0,   0,   0,   1.8344030848628483,
	     -0.017622779064995642,   0.76204221447773546,   0,   0,   0,   1.2381213145506385,
	     -0.034844135184427756,   -0.21656850528145191,   1,   0.625,   0.1953125,   -0.21472642726492033,
	     0.00044389000156342973,   -0.039350449411834472,   0,   1,   0.625,   -0.029322839232682182,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	    m_K2c[3] <<
	-0.026700589945090891,   -0.21058742754106646,   0.24185856600630501,   1.3798934226662904,   1.9450838658816487e-14,   -0.35078808495101099; // Q = 7.5, R=200 
	// -0.48402097619111417,   -0.42376985807359507,   -1.3360755825434583,   0.08540893033116069,   -0.25517460395887159; // Q = 5
	// -2.1195710428629027,   -1.6001839119866061,   -3.5343931650567462,   0.21146444275696266,   -0.64888135178617723;  // Q = 100
	//-0.29498618074169913,   -0.28483932006375978,   -1.0551617243483074,   0.068797172806382811,   -0.20401339097820362; // Q = 2.5
	   

	    m_Gamma_aug[3] <<
	0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	   
	/////////////////////////////////////////////////////////////// v4 ////////////////////////////////////////////////////////////////////////////
	 m_phi_aug[4] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[4] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      

	    m_Gamma_aug[4] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	  

	/////////////////////////////////////////////////////////////// v5 ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[5] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[5] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      

	    m_Gamma_aug[5] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	  
	    
	/////////////////////////////////////////////////////////////// v6 ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[6] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[6] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      


	    m_Gamma_aug[6] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	  
	   
	/////////////////////////////////////////////////////////////// v7 ////////////////////////////////////////////////////////////////////////////
	m_phi_aug[7] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[7] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      
	    m_Gamma_aug[7] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;
	  
		 
	/////////////////////////////////////////////////////////////// v8 ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[8] <<   
	0.71278250040210955,   -0.46527336465789865,   0,   0,   0,   1.7029138819631846,
	     -0.016246244543155621,   0.7847829115855518,   0,   0,   0,   1.1189251481557208,
	     -0.031846711224899862,   -0.19512883284687657,   1,   0.55555555555555558,   0.15432098765432101,   -0.17162998465516457,
	     0.00035916683321570537,   -0.035483726209156158,   0,   1,   0.55555555555555558,   -0.023428528346724393,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;
	    
	    // q=7.5
	    m_K2c[8] <<
	-0.028697981997259953,   -0.20728428461608525,   0.25087863029946833,   1.3819234949303254,   -6.0841843617852185e-15,   -0.31420031167911749; // Q = 7.5
	//-0.28614679486699318,   -0.28802685785999194,   -1.0593314709112267,   0.080818517814108204,   -0.15246689570600142; // Q = 2.5
	    
	    m_Gamma_aug[8] <<
	0,
	     0,
	     -0,
	     -0,
	     0,
	     1;


	/////////////////////////////////////////////////////////////// origin ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[9] <<   
	0.80792437410860463,   -0.32456193544483858,   0,   0,   0,   1.21142341744453,
	     -0.011332934513699816,   0.85814988577894158,   0,   0,   0,   0.73571105184472918,
	     -0.021656235776514279,   -0.12725181208985945,   1,   0.34722222222222227,   0.060281635802469154,   -0.069476429682567453,
	     0.00015077768163936463,   -0.023171726786256237,   0,   1,   0.34722222222222227,   -0.0094690301420210597,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;

	// // v1 q=7.5
	    m_K2c[9] <<
	-0.035357029958590802,   -0.19487134933835665,   0.27980395963813398,   1.3792300886808009,   3.6472659351993714e-14,   -0.20049042528237065; // Q = 10, R-=200
	//-0.42875437936449812,   -0.3169739912062795,   -1.0294664428425566,   0.04057357149091402,   -0.093311658910749912; // Q = 2.5      

	    m_Gamma_aug[9] <<
	    0,
	     0,
	     -0,
	     -0,
	     0,
	     1;

	/////////////////////////////////////////////////////////////// 1 classifier ////////////////////////////////////////////////////////////////////////////
	    m_phi_aug[10] <<   
	0.74301174761195976,   -0.42226330801771633,   0,   0,   0,   1.5559451883362971,
	     -0.014744435174581204,   0.80835641187682827,   0,   0,   0,   0.99557646247979037,
	     -0.028656443027834801,   -0.17311895085723894,   1,   0.4861111111111111,   0.1181520061728395,   -0.13295226750854111,
	     0.00028163632370048518,   -0.031501232385698755,   0,   1,   0.4861111111111111,   -0.018140508169899046,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;
	    
	    // q=7.5
	    m_K2c[10] <<
	-0.030804050137703931,   -0.20357277451727346,   0.26020640554214947,   1.3825502967700507,   -3.0954116480415793e-14,   -0.27693268600392068; // Q = 7.5
	//-0.28614679486699318,   -0.28802685785999194,   -1.0593314709112267,   0.080818517814108204,   -0.15246689570600142; // Q = 2.5
	    
	    m_Gamma_aug[10] <<
	0,
	     0,
	     -0,
	     -0,
	     0,
	     1;

	/////////////////////////////////////////////////////////////// 2 classifier ////////////////////////////////////////////////////////////////////////////
	       m_phi_aug[11] <<   
	0.71278250040210955,   -0.46527336465789865,   0,   0,   0,   1.7029138819631846,
	     -0.016246244543155621,   0.7847829115855518,   0,   0,   0,   1.1189251481557208,
	     -0.031846711224899862,   -0.19512883284687657,   1,   0.55555555555555558,   0.15432098765432101,   -0.17162998465516457,
	     0.00035916683321570537,   -0.035483726209156158,   0,   1,   0.55555555555555558,   -0.023428528346724393,
	     0,   0,   0,   0,   1,   0,
	     0,   0,   0,   0,   0,   0;
	    
	    // q=7.5
	    m_K2c[11] <<
	-0.028697981997259953,   -0.20728428461608525,   0.25087863029946833,   1.3819234949303254,   -6.0841843617852185e-15,   -0.31420031167911749; // Q = 7.5
	//-0.28614679486699318,   -0.28802685785999194,   -1.0593314709112267,   0.080818517814108204,   -0.15246689570600142; // Q = 2.5
	    
	    m_Gamma_aug[11] <<
	0,
	     0,
	     -0,
	     -0,
	     0,
	1;

    }
    // destructor
    ~lateralControllerWEBOTS(){
    }
};

#endif
